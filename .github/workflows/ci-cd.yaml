name: CI/CD

permissions:
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  release:
    types:
      - created

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Run ESLint
        run: npm run lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Check formatting with Prettier
        run: npm run format

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Run TypeScript type checking
        run: npm run typecheck

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/coverage-final.json
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    needs: [lint, format, type-check, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Build package
        run: npm run build

      - name: Check build output
        run: |
          ls -la dist/
          echo "Checking that all expected files are present:"
          test -f dist/index.cjs || (echo "Missing index.cjs" && exit 1)
          test -f dist/index.mjs || (echo "Missing index.mjs" && exit 1)
          test -f dist/index.d.ts || (echo "Missing index.d.ts" && exit 1)
          test -f dist/index.d.cts || (echo "Missing index.d.cts" && exit 1)
          echo "All build files present âœ“"

      - name: Test package exports
        run: |
          echo "Testing package imports..."
          node -e "import('./dist/index.mjs').then(pkg => console.log('ESM import works:', Object.keys(pkg).length > 0))"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

      - name: Upload package-lock
        uses: actions/upload-artifact@v4
        with:
          name: package-lock
          path: package-lock.json
          retention-days: 7

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Download package-lock
        uses: actions/download-artifact@v4
        with:
          name: package-lock

      - name: Run security audit
        run: npm audit --production --audit-level=moderate

  auto-version:
    needs: [build, security-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT_TOKEN }}
      - uses: ./.github/actions/setup
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --local user.email "m@rco.sh"
          git config --local user.name "Marco Antonio Gonzalez Junior"

      - name: Determine version bump type
        id: version-type
        run: |
          echo "version-type=patch" >> $GITHUB_OUTPUT
          echo "skip=false" >> $GITHUB_OUTPUT

  publish-npm:
    needs: [build, security-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          token: ${{ secrets.NPM_TOKEN }}
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Fix package
        run: npm pkg fix

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    needs: [build, security-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          token: ${{ secrets.GH_PAT_TOKEN }}
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Fix package
        run: npm pkg fix

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PAT_TOKEN }}

  create-release:
    needs: [publish-npm, publish-gpr]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Please refer to the commit history for changes.
          draft: false
          prerelease: false